<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>tool-vim</title>
      <link href="/blog/2024/05/07/tool-vim/"/>
      <url>/blog/2024/05/07/tool-vim/</url>
      
        <content type="html"><![CDATA[<h1 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h1><p>普通模式<br>hjkl左上下右移动<br>gg跳到第一行<br>G跳到最后一行<br>ctrl+u&#x2F;ctrl+d  上一页下一页 记忆 u up d down<br>{line_number}gg 跳到特定行<br>zz&#x2F;zb&#x2F;zt光标设置为屏幕第一行 居中 最后一行 记忆b button t top<br>^当前行开头<br>$当前行最后</p><p>i 当前光标前开始写<br>a 当前光标后开始写<br>o 当前光标下一行开始写<br>s 删除当前光标内容然后开始写</p><p>visual模式<br>按v<br>x剪切<br>y复制<br>p粘贴</p><p>搜索<br>&#x2F;{pattern} 下一个出现的地方</p><p>？{pattern} 上一个出现的地方</p><p>dd删除当前行<br>dgg删除到第一行<br>dG删除到最后一行</p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>db-mysql</title>
      <link href="/blog/2024/05/06/db-mysql/"/>
      <url>/blog/2024/05/06/db-mysql/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建高可用mysql-三节点"><a href="#搭建高可用mysql-三节点" class="headerlink" title="搭建高可用mysql-三节点"></a>搭建高可用mysql-三节点</h1><h2 id="机器环境："><a href="#机器环境：" class="headerlink" title="机器环境："></a>机器环境：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/*release </span><br><span class="line">lscpu</span><br><span class="line">free -h</span><br><span class="line">df -h</span><br></pre></td></tr></table></figure><p>查看当前机器系统、cpu核数、内存、磁盘空间</p><p>1、adc-mysql-1:centos7.9，4C，7.7G（swap 8G），92G，10.32.9.227<br>2、adc-mysql-2:centos7.9，4C，7.7G（swap 8G），92G，10.32.9.228<br>3、adc-mysql-3:centos7.9，4C，7.6G（swap 0），92G，10.32.11.176</p><h2 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h2><p>关闭防火墙<br>关闭防火墙（firewalld）<br>停止 firewalld 服务：</p><p>sudo systemctl stop firewalld<br>禁用 firewalld 服务在启动时自动启动：</p><p>sudo systemctl disable firewalld<br>检查 firewalld 的状态以确保它已停止并且被禁用：</p><p>sudo systemctl status firewalld</p><p>关闭 SELinux<br>临时关闭 SELinux（直到下次重启）：</p><p>sudo setenforce 0<br>永久关闭 SELinux（需要重启生效）：</p><p>编辑 SELinux 配置文件：</p><p>sudo nano &#x2F;etc&#x2F;selinux&#x2F;config<br>找到这一行：</p><p>SELINUX&#x3D;enforcing<br>将其修改为：</p><p>SELINUX&#x3D;disabled<br>保存并关闭文件。</p><p>配置hostname<br>#编辑&#x2F;etc&#x2F;hosts文件<br>vi &#x2F;etc&#x2F;hosts<br>10.32.9.227 adc-mysql-1<br>10.32.9.228 adc-mysql-2<br>10.32.11.176 adc-mysql-3<br>重启网卡<br>service network restart<br>查看hostname是否修改<br>hostname</p><h2 id="各节点安装-MySQL"><a href="#各节点安装-MySQL" class="headerlink" title="各节点安装 MySQL"></a>各节点安装 MySQL</h2><p>1、mysql版本：8.0.30</p><p>添加yum源<br>安装mysql<br>配置my.cnf<br>要在CentOS 7.9上安装MySQL 8.0.30，您需要按照以下步骤操作：</p><p>import秘钥，此处需要带年份，2024的秘钥没有，所以使用的2023<br>sudo rpm –import <a href="https://repo.mysql.com/RPM-GPG-KEY-mysql-2023">https://repo.mysql.com/RPM-GPG-KEY-mysql-2023</a></p><p>下载MySQL Yum仓库配置包：<br>此处参考网上文档，使用7-5<br>wget <a href="https://dev.mysql.com/get/mysql80-community-release-el7-5.noarch.rpm">https://dev.mysql.com/get/mysql80-community-release-el7-5.noarch.rpm</a><br>安装MySQL Yum仓库配置包：</p><p>sudo rpm -ivh mysql80-community-release-el7-5.noarch.rpm<br>这个命令将添加MySQL仓库到您的仓库列表中。</p><p>查看可用的MySQL版本：<br>yum list mysql-community-server –showduplicates<br>这将列出所有可用的MySQL社区服务器版本。</p><p>选择特定版本进行安装：<br>sudo yum install mysql-community-server-8.0.30</p><p>检查是否存在mysql用户<br>id mysql</p><p>创建数据目录sudo，并授权给mysql用户<br>sudo mkdir -p &#x2F;data&#x2F;mysql&#x2F;data<br>sudo mkdir -p &#x2F;data&#x2F;mysql&#x2F;tmp<br>sudo mkdir -p &#x2F;data&#x2F;mysql&#x2F;logs<br>sudo mkdir -p &#x2F;data&#x2F;mysql&#x2F;binlog<br>sudo chown -R mysql:mysql &#x2F;data&#x2F;mysql<br>sudo chmod 777 &#x2F;data<br>sudo chmod -R 750 &#x2F;data&#x2F;mysql</p><p>配置my.cnf<br>配置如下：<br>sudo vim &#x2F;etc&#x2F;my.cnf<br>‘’’<br>[mysqld]<br>datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;data​<br>socket&#x3D;&#x2F;data&#x2F;mysql&#x2F;mysql.sock​<br>tmpdir&#x3D;&#x2F;data&#x2F;mysql&#x2F;tmp​<br>log-error&#x3D;&#x2F;data&#x2F;mysql&#x2F;logs&#x2F;mysqld.log​<br>pid-file&#x3D;&#x2F;data&#x2F;mysql&#x2F;mysqld.pid​<br>#是否打开慢查询sql日志​<br>general_log&#x3D;0​<br>general_log_file&#x3D;&#x2F;data&#x2F;mysql&#x2F;logs&#x2F;general.log​<br>slow_query_log&#x3D;1​<br>slow_query_log_file&#x3D;&#x2F;data&#x2F;mysql&#x2F;logs&#x2F;mysql-slow.log​<br>long_query_time&#x3D;5​<br>character-set-server&#x3D;utf8mb4​<br>collation-server&#x3D;utf8mb4_general_ci​<br>default-storage-engine&#x3D;INNODB​<br>init_connect&#x3D;’SET NAMES utf8mb4’​<br>transaction_isolation&#x3D;READ-COMMITTED​<br>binlog_format&#x3D;ROW​<br>binlog_expire_logs_seconds&#x3D;604800<br>log_bin&#x3D;&#x2F;data&#x2F;mysql&#x2F;binlog&#x2F;mysql-bin​<br>log_bin_index&#x3D;&#x2F;data&#x2F;mysql&#x2F;binlog&#x2F;mysql-bin.index​<br>relay_log&#x3D;&#x2F;data&#x2F;mysql&#x2F;logs&#x2F;relay-log​<br>relay_log_index&#x3D;&#x2F;data&#x2F;mysql&#x2F;logs&#x2F;relay-log.index​</p><p>#MySQL连接闲置超过一定时间后(单位：秒)将会被强行关闭​<br>##MySQL默认的wait_timeout 值为8个小时, interactive_timeout参数需要同时配置才能生效​<br>interactive_timeout&#x3D;1800​<br>wait_timeout&#x3D;1800​<br>#最大连接数​<br>max_connections&#x3D;4096​<br>#最大错误连接数​<br>max_connect_errors &#x3D; 10​<br>#是否对sql语句大小写敏感，1表示不敏感​<br>lower_case_table_names&#x3D;1​<br>#时区​<br>default_time_zone &#x3D; “+8:00”​ ​<br>#默认使用“mysql_native_password”插件认证​<br>default_authentication_plugin&#x3D;mysql_native_password​<br>#INNODB​<br>innodb_flush_method &#x3D; O_DIRECT​<br>innodb_log_file_size &#x3D; 512M​<br>innodb_log_files_in_group &#x3D; 3​<br>innodb_flush_log_at_trx_commit &#x3D; 0​<br>innodb_strict_mode &#x3D; ON​<br>innodb_data_file_path &#x3D; ibdata1:256M;ibdata2:16M:autoextend​<br>innodb_checksum_algorithm &#x3D; strict_crc32​<br>innodb_lock_wait_timeout &#x3D; 5​<br>sql_mode&#x3D;’STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION’​</p><p>#mgr​<br>server_id&#x3D;1<br>gtid_mode&#x3D;ON​<br>enforce_gtid_consistency&#x3D;ON​<br>master_info_repository&#x3D;TABLE​<br>relay_log_info_repository&#x3D;TABLE​<br>relay_log_recovery&#x3D;ON​<br>binlog_checksum&#x3D;NONE​<br>log_slave_updates&#x3D;ON​<br>plugin_load_add&#x3D;’group_replication.so’​<br>transaction_write_set_extraction&#x3D;XXHASH64​<br>loose-group_replication_group_name&#x3D;”6789b6d7-de75-11ec-a59e-fa163e7035c7”​<br>loose-group_replication_start_on_boot&#x3D;off​<br>loose-group_replication_local_address&#x3D; “10.32.9.227:33061”​<br>loose-group_replication_group_seeds&#x3D; “10.32.9.227:33061,10.32.9.228:33061,10.32.11.176:33061”​ loose-group_replication_bootstrap_group&#x3D;off<br>loose-group_replication_ip_whitelist&#x3D;”10.32.9.227,10.32.9.228,10.32.11.176”​<br>[client]​<br>socket&#x3D;&#x2F;data&#x2F;mysql&#x2F;mysql.sock​<br>default-character-set&#x3D;utf8mb4<br>‘’’</p><p>初始化MySQL数据库<br>sudo mysqld –initialize<br>sudo cat &#x2F;data&#x2F;mysql&#x2F;logs&#x2F;mysqld.log<br>sudo grep ‘temporary password’ &#x2F;data&#x2F;mysql&#x2F;logs&#x2F;mysqld.log<br>把初始化好的文件也从root转给mysql用户<br>sudo chown -R mysql:mysql &#x2F;data&#x2F;mysql</p><p>启动MySQL服务<br>systemctl start mysqld<br>查看MySQL服务状态<br>systemctl status mysqld</p><p>登录mysql更改临时密码，创建管理员账号<br>sudo mysql -uroot -p</p><p>修改mysql root 用户密码<br>alter user ‘root‘@’localhost’ identified by ‘root’ ;<br>修改其他ip地址可以连接本机mysql<br>use mysql;<br>update user set host&#x3D;’%’ where user &#x3D; ‘root’;<br>flush privileges;<br>alter user ‘root‘@’%’ identified with mysql_native_password by ‘root’;<br>flush privileges;</p><h2 id="配置MGR"><a href="#配置MGR" class="headerlink" title="配置MGR"></a>配置MGR</h2><p>打开my.cnf增加配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#mgr</span><br><span class="line">server_id=3</span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency=ON</span><br><span class="line">master_info_repository=TABLE</span><br><span class="line">relay_log_info_repository=TABLE</span><br><span class="line">relay_log_recovery=ON</span><br><span class="line">log_bin=binlog</span><br><span class="line">binlog_checksum=NONE</span><br><span class="line">binlog_format=ROW</span><br><span class="line">log_slave_updates=ON</span><br><span class="line"></span><br><span class="line">plugin_load_add=&#x27;group_replication.so&#x27;</span><br><span class="line">transaction_write_set_extraction=XXHASH64</span><br><span class="line">loose-group_replication_group_name=&quot;6e51636d-8e7c-8253-0b4b-1029b2e4f6f9&quot;</span><br><span class="line">loose-group_replication_start_on_boot=off</span><br><span class="line">loose-group_replication_local_address= &quot;10.32.11.176:33061&quot;</span><br><span class="line">loose-group_replication_group_seeds= &quot;10.32.9.227:33061,10.32.9.228:33061,10.32.11.176:33061&quot;</span><br><span class="line">loose-group_replication_bootstrap_group=off</span><br><span class="line">loose-group_replication_ip_whitelist=&quot;10.32.9.227,10.32.9.228,10.32.11.176&quot;</span><br></pre></td></tr></table></figure><p>增加mgr复制用户（三台机器都要操作）<br>SET SQL_LOG_BIN&#x3D;0;<br>CREATE USER mgruser@’%’ IDENTIFIED BY ‘mgruser’;<br>GRANT REPLICATION SLAVE ON <em>.</em> TO mgruser@’%’;<br>FLUSH PRIVILEGES;<br>SET SQL_LOG_BIN&#x3D;1;<br>CHANGE MASTER TO MASTER_USER&#x3D;’mgruser’, MASTER_PASSWORD&#x3D;’mgruser’ FOR CHANNEL ‘group_replication_recovery’;</p><p>show plugins;<br>install PLUGIN group_replication SONAME ‘group_replication.so’;<br>查看是否下载成功，使用show plugins;语句查看</p><h2 id="启动mgr单主模式启动一主两从"><a href="#启动mgr单主模式启动一主两从" class="headerlink" title="启动mgr单主模式启动一主两从"></a>启动mgr单主模式启动一主两从</h2><p>主节点操作<br>SET GLOBAL group_replication_bootstrap_group&#x3D;ON;<br>START GROUP_REPLICATION;<br>SET GLOBAL group_replication_bootstrap_group&#x3D;OFF;</p><p>从节点操作<br>START GROUP_REPLICATION;</p><p>查看此时MGR组信息，MEMBER_STATE状态全部是ONLINE才是成功。不然就需要查看日志信息。<br>SELECT * FROM performance_schema.replication_group_members;</p><p>四、测试数据读写<br>主库上操作</p><ol><li>创建数据库<br>create database mgr;<br>查看从库上是否有数据库mgr</li><li>创建表<br>use mgr;<br>CREATE TABLE <code>user</code> (<br>  <code>id</code> bigint NOT NULL ,<br>  <code>account</code> varchar(30)  NOT NULL ,<br>  <code>name</code> varchar(50) NOT NULL ,<br>  PRIMARY KEY (<code>id</code>) USING BTREE,<br>  UNIQUE KEY <code>UN_ACCOUNT</code> (<code>account</code>) USING BTREE<br>)<br>从库上查看表信息</li><li>插入数据<br>INSERT INTO user VALUES (1, ‘zhangsan’, ‘张三’);<br>INSERT INTO user VALUES (2, ‘lisi’, ‘李四’);<br>从库查看信息如下</li><li>删除数据<br>delete from user where id &#x3D; 1;<br>从库user表信息更新</li><li>从库只有查询的权力，没有更改的权限</li><li>主库服务停掉，查看从库状态变化<br>在node1 上执行<br>stop group_replication;<br>node1 状态变成OFFLINE下线状态<br> 在node2 上查看组信息，发现node3现在的MEMBER_ROLE为PRIMARY<br> 重新启动node1</li></ol><p>start group_replication;<br>node1 重新加入到组中，但是此时是从节点</p><p>参考：<a href="https://blog.csdn.net/axibazZ/article/details/127103865">https://blog.csdn.net/axibazZ/article/details/127103865</a></p><h2 id="配置mysql-router"><a href="#配置mysql-router" class="headerlink" title="配置mysql router"></a>配置mysql router</h2><p>五、MGR整合MySQL Router实现读写分离</p><ol><li>下载安装MySQL Router</li></ol><p>这里我安装在node2节点上</p><p>下载<br>wget <a href="https://dev.mysql.com/get/Downloads/MySQL-Router/mysql-router-8.0.23-el7-x86_64.tar.gz">https://dev.mysql.com/get/Downloads/MySQL-Router/mysql-router-8.0.23-el7-x86_64.tar.gz</a><br>解压<br>tar -zxvf mysql-router-8.0.23-el7-x86_64.tar.gz<br>重命名<br>mv mysql-router-8.0.23-el7-x86_64 mysql-router-8.0<br>将mysql-router的目录添加到环境变量PATH中<br>echo “export PATH&#x3D;$PATH:&#x2F;opt&#x2F;apps&#x2F;mysql-router-8.0&#x2F;bin&#x2F;“ &gt;&gt; &#x2F;etc&#x2F;profile<br>source &#x2F;etc&#x2F;profile</p><p>使用yum install 安装 yum install mysqlrouter</p><p>验证是否安装成功<br>mysqlrouter -V<br>2. 修改MySQL Router配置</p><p>在mysql-router-8.0目录下</p><p>创建日志和数据目录<br>mkdir logs data<br>在&#x2F;etc 目录下创建mysqlrouter.cnf文件，内容如下<br>[DEFAULT]<br>logging_folder &#x3D; &#x2F;var&#x2F;log&#x2F;mysqlrouter<br>runtime_folder &#x3D; &#x2F;run&#x2F;mysqlrouter<br>config_folder &#x3D; &#x2F;etc&#x2F;mysqlrouter</p><p>connect_timeout&#x3D;30<br>read_timeout&#x3D;30</p><p>[logger]<br>level &#x3D; INFO</p><h1 id="If-no-plugin-is-configured-which-starts-a-service-keepalive"><a href="#If-no-plugin-is-configured-which-starts-a-service-keepalive" class="headerlink" title="If no plugin is configured which starts a service, keepalive"></a>If no plugin is configured which starts a service, keepalive</h1><h1 id="will-make-sure-MySQL-Router-will-not-immediately-exit-It-is"><a href="#will-make-sure-MySQL-Router-will-not-immediately-exit-It-is" class="headerlink" title="will make sure MySQL Router will not immediately exit. It is"></a>will make sure MySQL Router will not immediately exit. It is</h1><h1 id="safe-to-remove-once-Router-is-configured"><a href="#safe-to-remove-once-Router-is-configured" class="headerlink" title="safe to remove once Router is configured."></a>safe to remove once Router is configured.</h1><p>[keepalive]<br>interval &#x3D; 60</p><p>[routing:primary]<br>bind_address &#x3D; 0.0.0.0<br>bind_port &#x3D; 3307<br>max_connections &#x3D; 1024<br>destinations &#x3D; 10.32.9.227:3306,10.32.9.228:3306,10.32.11.176:3306<br>routing_strategy &#x3D; first-available</p><p>[routing:secondary]<br>bind_address &#x3D; 0.0.0.0<br>bind_port &#x3D; 3308<br>max_connections &#x3D; 1024<br>destinations &#x3D; 10.32.9.228:3306,10.32.11.176:3306<br>routing_strategy &#x3D; round-robin</p><p>修改权限(使用yum install则不需要)<br>chown -R mysql:mysql &#x2F;opt&#x2F;apps&#x2F;mysql-router-8.0&#x2F;<br>chown -R mysql:mysql &#x2F;etc&#x2F;mysqlrouter.conf<br>3. 启动MySQL Router<br>sudo systemctl start mysqlrouter(使用yum install)<br>mysqlrouter –config&#x3D;&#x2F;etc&#x2F;mysqlrouter.conf &amp;（安装包安装）<br>4. 验证是否正确<br>在node1 上连接 228 的 3307 端口查看现在的主库为node1，并且其他节点连接129的7001也均为node1。<br>在node1 上连接 228 的 3308 端口，显示连接的为node3<br>在node2 上连接 228 的 3308 端口，显示连接的为node2<br>在node3上连接 129 的 3308 端口，显示连接的为node3<br>5、验证连接3307写入</p><p>DELIMITER $$</p><p>CREATE PROCEDURE InsertMassiveData()<br>BEGIN<br>  DECLARE i INT DEFAULT 1;<br>  WHILE i &lt;&#x3D; 10000 DO<br>    INSERT INTO user (id, account, name) VALUES (i, CONCAT(‘user’, i), CONCAT(‘Name’, i));<br>    SET i &#x3D; i + 1;<br>  END WHILE;<br>END$$</p><p>DELIMITER ;</p><p>CALL InsertMassiveData();</p><p>select count(*) from mgr.user;<br>结果为10000；</p><p>至此，MySQL MGR集群安装完毕。</p>]]></content>
      
      
      <categories>
          
          <category> db </category>
          
      </categories>
      
      
        <tags>
            
            <tag> db </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
